//---------------------------------
// Mixins
//---------------------------------

@use "variables" as *;

@mixin flex-center() {
	display: flex;
	align-items: center;
	justify-content: center;
}

@mixin grid-center() {
	display: grid;
	place-items: center;
}

@mixin clearfix {
	&::after {
		content: '';
		display: table;
		clear: both;
	}
}

@mixin background($url) {
	background-image: url($url);
	background-position: center;
	background-size: cover;
	background-repeat: no-repeat;
}

@mixin push-center {
	display: block;
	margin-inline: auto;
}

@mixin pseudo($pos: absolute, $display: block, $content: '') {
	content: $content;
	position: $pos;
	display: $display;
}

@mixin abs-position($inset: auto) {
	@include pseudo;

	inset: $inset;
}

@mixin image-2x($image, $width, $height) {
	@media (min--moz-device-pixel-ratio: 1.3),
	(-o-min-device-pixel-ratio: 2.6/2),
	(-webkit-min-device-pixel-ratio: 1.3),
	(min-device-pixel-ratio: 1.3),
	(min-resolution: 1.3dppx) {
		background-image: url($image);
		background-size: $width $height;
	}
}

@mixin media-only($width, $type: min) {
	@if map_has_key($breakpoints, $width) {
		$width: map_get($breakpoints, $width);
	}

	@if $type == max {
		$width: $width - 1px;
	}
	@media only screen and (#{$type}-width: $width) {
		@content;
	}
}
